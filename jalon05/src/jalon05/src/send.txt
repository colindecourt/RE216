 int k = 0;
          /*char * file_name = malloc(sizeof(char)*PATH_NAME_MAX);
          file_name = user_input + strlen("/send ");
          strncat(file_name,file_name,strlen(file_name)-strlen("\n"));
          printf("path : %s\n",file_name);*/
          char *fd_to_send = malloc(sizeof(char) * PSEUDO_LEN_MAX);
          memset(fd_to_send, '\0', sizeof(fd_to_send));
          do_recv(s, fd_to_send);
          printf("to send is : %s\n",fd_to_send);
          char path[] = "/home/cdecourt/Documents/RE216/test.txt";
          int fd_file = open("/home/cdecourt/Documents/RE216/test.txt", O_RDONLY);
          if (fd_file == -1)
          {
            printf("Error, unable to open file");
          }
          else
          {
            int k=0;
            printf("fd %i\n",fd_file);
            int to_read = 0;
            FILE * test_size = NULL;
            test_size = fopen(path,"r");
            while(fgetc(test_size) != EOF) to_read++;
            printf("size %i\n",to_read);
            
            char * buffer = malloc(sizeof(char)*to_read);
            strcpy(buffer,"");
            int a= read(fd_file,(void*)buffer,to_read);
            
            if(a==-1){
              printf("stop");
              break;
            }
            else
            {
              /*int new = open("/home/cdecourt/Documents/RE216/new.txt", O_RDWR|O_CREAT, S_IRWXU);
              int set = write(new,(void*)buffer,to_read);  */ 
              do_send(atoi(fd_to_send),buffer,to_read);
            }

          }






          struct sockaddr_in serv_addr2;
          get_addr_info(port_p2p, &serv_addr2, ip);
          int s_send = do_socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
          int connect_p2p = do_connect(s, serv_addr2);